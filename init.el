;;; Do not edit this file!
;;; Make changes in README.org

(unless (package-installed-p 'vc-use-package)
  (package-vc-install "https://github.com/slotThe/vc-use-package"))
(require 'vc-use-package)

(add-to-list 'package-archives '("gnu"   . "https://elpa.gnu.org/packages/"))
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))

(defconst emacs-tmp-dir (expand-file-name (format "emacs%d" (user-uid)) temporary-file-directory))

(use-package emacs
  :ensure nil
  :commands (reload-config
	     sanemacs/backward-kill-word)
  :bind (("C-<" . indent-rigidly-right-to-tab-stop)
	 ("C->" . indent-rigidly-left-to-tab-stop)
	 ("C-x C-b" . ibuffer))
  :custom ((inhibit-startup-screen t)
	   (initial-scratch-message "")
	   (use-short-answers t)
	   (ring-bell-function 'ignore)
	   (cursor-type 'bar)
	   (frame-title-format '("%b"))
	   (linum-format "%4d ")
	   (custom-file (expand-file-name "custom.el" user-emacs-directory))
	   (backup-by-copying t)
	   (delete-old-versions t)
	   (kept-new-versions 6)
	   (kept-old-versions 2)
	   (version-control t)
	   (auto-save-list-file-prefix emacs-tmp-dir)
	   (auto-save-file-name-transforms `((".*" ,emacs-tmp-dir t)))
	   (backup-directory-alist `((".*" . ,emacs-tmp-dir)))
	   (create-lockfiles nil)))

(unless (file-exists-p custom-file)
  (write-region "" nil custom-file))

(defun reload-config ()
  (interactive)
  (load-file (expand-file-name "init.el" user-emacs-directory)))

(add-hook 'after-init-hook #'global-visual-line-mode)

(add-hook 'before-save-hook
	  #'delete-trailing-whitespace)    ; Delete trailing

(add-hook 'prog-mode-hook
	  (if (or
	       (not (fboundp 'linum-mode))
	       (and (fboundp 'display-line-numbers-mode) (display-graphic-p)))
	      #'display-line-numbers-mode
	    #'linum-mode))

(setq lisp-dir (expand-file-name "lisp" user-emacs-directory))
(setq sane-dir (concat lisp-dir "/sanemodules"))

(add-to-list 'load-path lisp-dir)
(add-to-list 'load-path sane-dir)

(use-package sane-modules
  :ensure nil
  :load-path sane-dir
  :config
  (setq sane-module-base-directory (concat user-emacs-directory "modules/"))
  (setq sane-module-module-list '(;;; Sanemacs extended configuration
				  ;;; ui
				  ui/mct
				  ui/popper
				  ui/org-modern
				  ui/rainbow-mode
				  ui/ef-themes
				  ;;; tools
				  tools/edit-indirect
				  tools/emacs-dashboard
				  tools/expand-region
				  tools/helpful
				  tools/iedit
				  tools/magit
				  tools/vundo
				  tools/visual-regexp
				  tools/denote
				 )))
  (sane-modules-load-modules
   sane-module-base-directory
   sane-module-module-list t)
